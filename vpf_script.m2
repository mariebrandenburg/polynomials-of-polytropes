W = {12, 21, 30, 20, 19, 20, 19, 29, 11, 18, 20, 21}; -- weight vector in cone of interest
R = QQ[x12, x13, x14, x21, x23, x24, x31, x32, x34, x41, x42, x43, Weights => W];
J_A = ideal (x12*x21-1, x13*x31-1, x14*x41-1, x23*x32-1, x24*x42-1, x34*x43-1, x12*x23-x13, x12*x24-x14, x13*x34-x14, x23*x34-x24);
M = ideal leadTerm J_A;
S = QQ[x12, x13, x14, x21, x23, x24, x31, x32, x34, x41, x42, x43, a12, a13, a14, a21, a23, a24, a31, a32, a34, a41, a42, a43]; -- the VPF will be a polynomial in the aij
f = map(S, R, toList(x12, x13, x14, x21, x23, x24, x31, x32, x34, x41, x42, x43));
L_A = ideal(x12-x21-x23-x24+x32+x42, x13+x23-x31-x32-x34+x43, x14+x24+x34-x41-x42-x43); -- ideal generated by kernel of the 10 x 12 matrix
I = f(M) + L_A;
minimalPrimes M; -- (x14, x41, x23, x43, x13, x24, x21, x34, x12) is a minimal prime of I
x31*x32*x42 % I; -- equals x43^3, so x43^3 is our unique standard monomial of degree 3.
gensList= {x12, x13, x14, x21, x23, x24, x31, x32, x34, x41, x42, x43};
tdGens = apply(gensList, i->1+i/2+i^2/12);
td = product(tdGens);
generic_vector = a12*x12+a13*x14+a14*x14+a21*x21+a23*x23+a24*x24+a31*x31+a32*x32+a34*x34+a41*x41+a42*x42+a43*x43;
expPol = 1+generic_vector+generic_vector^2/2+generic_vector^3/6;
p = td*expPol;
p % I; -- group up terms whose coefficients in the xij is just x43^3... that polynomial in the aij is the VPF (up to some simplifications / elimination of variables)